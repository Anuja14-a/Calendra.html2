<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Modern Interactive Calendar</title>
<style>
  :root {
    --primary-color: #4a90e2;
    --background-color: #f0f4f8;
    --text-color: #333;
    --today-bg: #4a90e2;
    --today-text: #fff;
    --hover-bg: #d0e4ff;
    }
  body {
    margin: 0;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: var(--background-color);
    color: var(--text-color);
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
  }
  .calendar {
    background: #fff;
    box-shadow: 0 8px 16px rgba(0,0,0,0.1);
    border-radius: 12px;
    width: 350px;
    user-select: none;
    display: flex;
    flex-direction: column;
  }
  .calendar-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px 25px;
    border-bottom: 1px solid #ddd;
  }
  .month-year {
    font-size: 1.25rem;
    font-weight: 600;
  }
  button {
    background: var(--primary-color);
    border: none;
    color: white;
    padding: 8px 12px;
    border-radius: 6px;
    cursor: pointer;
    font-weight: bold;
    transition: background-color 0.3s ease;
}
  button:hover {
    background: #357ABD;
  }
  .calendar-days {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    text-align: center;
    padding: 10px 20px 0 20px;
    font-weight: 600;
    color: #666;
    user-select: none;
    }
  .calendar-grid {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    padding: 12px 20px 20px 20px;
    gap: 10px;
  }
  .day {
    padding: 12px 0;
    border-radius: 8px;
    cursor: default;
    transition: background-color 0.2s ease;
     }
  .day:hover {
    background-color: var(--hover-bg);
  }
  .day.inactive {
    color: #bbb;
    cursor: default;
  }
  .day.today {
    background-color: var(--today-bg);
    color: var(--today-text);
    font-weight: 700;
    }
</style>
</head>
<body>
  <div class="calendar" role="application" aria-label="Calendar">
    <header class="calendar-header">
      <button id="prevBtn" aria-label="Previous Month">&lt;</button>
      <div class="month-year" aria-live="polite" id="monthYear"></div>
      <button id="nextBtn" aria-label="Next Month">&gt;</button>
    </header>
    <div class="calendar-days" aria-hidden="true">
      <div>Sun</div>
      <div>Mon</div>
      <div>Tue</div>
      <div>Wed</div>
      <div>Thu</div>
      <div>Fri</div>
      <div>Sat</div>
    </div>
     <div class="calendar-grid" id="calendarGrid" tabindex="0">
      <!-- calendar days go here -->
    </div>
  </div>
<script>
  (function() {
    const monthYear = document.getElementById('monthYear');
    const calendarGrid = document.getElementById('calendarGrid');
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');
    const today = new Date();
    let currentYear = today.getFullYear();
    let currentMonth = today.getMonth();
    function renderCalendar(year, month) {
      const firstDay = new Date(year, month, 1);
      const lastDay = new Date(year, month + 1, 0);
      const startDay = firstDay.getDay();  // Sunday = 0
      const totalDays = lastDay.getDate();
          const prevMonthLastDay = new Date(year, month, 0).getDate();
      
      calendarGrid.innerHTML = '';
            const monthNames = [
        "January", "February", "March", "April", "May", "June",
        "July", "August", "September", "October", "November", "December"];
      monthYear.textContent = monthNames[month] + " " + year;
             for (let i = startDay - 1; i >= 0; i--) {
        const dayElem = document.createElement('div');
        dayElem.classList.add('day', 'inactive');
        dayElem.textContent = prevMonthLastDay - i;
        calendarGrid.appendChild(dayElem);
      }
            for (let i = 1; i <= totalDays; i++) {
        const dayElem = document.createElement('div');
        dayElem.classList.add('day');
        dayElem.textContent = i;
       
        if (year === today.getFullYear() && month === today.getMonth() && i === today.getDate()) {
          dayElem.classList.add('today');
          dayElem.setAttribute('aria-current', 'date');
           }
        calendarGrid.appendChild(dayElem);
      }
            const totalCells = calendarGrid.childElementCount;
      const cellsToAdd = (totalCells % 7 === 0) ? (42 - totalCells) : (7 - (totalCells % 7));
      for (let i = 1; i <= cellsToAdd; i++) {
        const dayElem = document.createElement('div');
        dayElem.classList.add('day', 'inactive');
        dayElem.textContent = i;
        calendarGrid.appendChild(dayElem);
              }
    }
    prevBtn.addEventListener('click', () => {
      currentMonth--;
      if (currentMonth < 0) {
        currentMonth = 11;
        currentYear--;
         }
      renderCalendar(currentYear, currentMonth);
    });
    nextBtn.addEventListener('click', () => {
      currentMonth++;
      if (currentMonth > 11) {
        currentMonth = 0;
        currentYear++;
      }
      renderCalendar(currentYear, currentMonth);
       });
    nextBtn.addEventListener('click', () => {
      currentMonth++;
      if (currentMonth > 11) {
        currentMonth = 0;
        currentYear++;
      }
      renderCalendar(currentYear, currentMonth);
    });
    renderCalendar(currentYear, currentMonth);
  })();
  </script>
</body>
</html>
